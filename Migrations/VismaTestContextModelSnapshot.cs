// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VismaTest.Data;

namespace VismaTest.Migrations
{
    [DbContext(typeof(VismaTestContext))]
    partial class VismaTestContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("VismaTest.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EmployeeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PositionID")
                        .HasColumnType("int");

                    b.HasKey("EmployeeID");

                    b.HasIndex("PositionID");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("VismaTest.Models.Mission", b =>
                {
                    b.Property<int>("MissionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("MissionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MissionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MissionID");

                    b.ToTable("Missions");
                });

            modelBuilder.Entity("VismaTest.Models.Position", b =>
                {
                    b.Property<int>("PositionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<DateTime>("PositionEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PositionStartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PositionTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PositionID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("VismaTest.Models.PositionMission", b =>
                {
                    b.Property<int>("PositionTaskID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("PositionID")
                        .HasColumnType("int");

                    b.Property<int>("PositionName")
                        .HasColumnType("int");

                    b.Property<int?>("TaskMissionID")
                        .HasColumnType("int");

                    b.Property<int>("TaskName")
                        .HasColumnType("int");

                    b.HasKey("PositionTaskID");

                    b.HasIndex("PositionID");

                    b.HasIndex("TaskMissionID");

                    b.ToTable("PosiotionMissions");
                });

            modelBuilder.Entity("VismaTest.Models.Employee", b =>
                {
                    b.HasOne("VismaTest.Models.Position", "Position")
                        .WithMany()
                        .HasForeignKey("PositionID");
                });

            modelBuilder.Entity("VismaTest.Models.Position", b =>
                {
                    b.HasOne("VismaTest.Models.Employee", null)
                        .WithMany("Positions")
                        .HasForeignKey("EmployeeID");
                });

            modelBuilder.Entity("VismaTest.Models.PositionMission", b =>
                {
                    b.HasOne("VismaTest.Models.Position", "Position")
                        .WithMany()
                        .HasForeignKey("PositionID");

                    b.HasOne("VismaTest.Models.Mission", "Task")
                        .WithMany()
                        .HasForeignKey("TaskMissionID");
                });
#pragma warning restore 612, 618
        }
    }
}
