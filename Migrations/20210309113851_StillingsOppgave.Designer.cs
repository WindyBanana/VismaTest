// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VismaTest.Data;

namespace VismaTest.Migrations
{
    [DbContext(typeof(VismaTestContext))]
    [Migration("20210309113851_StillingsOppgave")]
    partial class StillingsOppgave
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("VismaTest.Models.Ansatt", b =>
                {
                    b.Property<int>("AnsattID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AnsattNavn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AnsattID");

                    b.ToTable("Ansatt");
                });

            modelBuilder.Entity("VismaTest.Models.Oppgave", b =>
                {
                    b.Property<int>("OppgaveID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("OppgaveDato")
                        .HasColumnType("datetime2");

                    b.Property<string>("OppgaveNavn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OppgaveID");

                    b.ToTable("Oppgave");
                });

            modelBuilder.Entity("VismaTest.Models.Stilling", b =>
                {
                    b.Property<int>("StillingID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AnsattID")
                        .HasColumnType("int");

                    b.Property<DateTime>("StillingSluttDato")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StillingStartDato")
                        .HasColumnType("datetime2");

                    b.Property<string>("Stillingstittel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StillingID");

                    b.HasIndex("AnsattID");

                    b.ToTable("Stilling");
                });

            modelBuilder.Entity("VismaTest.Models.StillingsOppgave", b =>
                {
                    b.Property<int>("StillingsOppgaveID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("OppgaveID")
                        .HasColumnType("int");

                    b.Property<int>("StillingID")
                        .HasColumnType("int");

                    b.HasKey("StillingsOppgaveID");

                    b.HasIndex("OppgaveID");

                    b.HasIndex("StillingID");

                    b.ToTable("StillingsOppgave");
                });

            modelBuilder.Entity("VismaTest.Models.Stilling", b =>
                {
                    b.HasOne("VismaTest.Models.Ansatt", "Ansatt")
                        .WithMany("Stillinger")
                        .HasForeignKey("AnsattID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VismaTest.Models.StillingsOppgave", b =>
                {
                    b.HasOne("VismaTest.Models.Oppgave", "Oppgave")
                        .WithMany()
                        .HasForeignKey("OppgaveID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VismaTest.Models.Stilling", "Stilling")
                        .WithMany("StillingsOppgaver")
                        .HasForeignKey("StillingID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
